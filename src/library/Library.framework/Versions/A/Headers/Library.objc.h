// Objective-C API for talking to threshwallet/src/library Go package.
//   gobind -lang=objc threshwallet/src/library
//
// File is generated by gobind. Do not edit.

#ifndef __Library_H__
#define __Library_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class LibraryHelloResponse;
@class LibraryMasterPrvKeyResponse;
@class LibraryRSADecryptResponse;
@class LibraryRSAEncryptResponse;
@class LibraryRSAKeyResponse;
@class LibraryRSAPrvKeyHashResponse;
@class LibraryRSAPubKeyResponse;
@class LibraryRSASignResponse;
@class LibraryStatus;
@class LibraryTokenResponse;
@class LibraryVcodeResponse;
@class LibraryWalletAddressesResponse;
@class LibraryWalletBackupResponse;
@class LibraryWalletBackupVerifyResponse;
@class LibraryWalletBalanceResponse;
@class LibraryWalletCheckResponse;
@class LibraryWalletCreateResponse;
@class LibraryWalletNewAddressResponse;
@class LibraryWalletPortfolioResponse;
@class LibraryWalletRestoreResponse;
@class LibraryWalletSendFeesResponse;
@class LibraryWalletSendResponse;
@class LibraryWalletTxsResponse;

/**
 * HelloResponse --
 */
@interface LibraryHelloResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field HelloResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull hello;
@end

/**
 * MasterPrvKeyResponse --
 */
@interface LibraryMasterPrvKeyResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field MasterPrvKeyResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull masterPrvKey;
@end

/**
 * RSADecryptResponse --
 */
@interface LibraryRSADecryptResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field RSADecryptResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull plainText;
@end

/**
 * RSAEncryptResponse --
 */
@interface LibraryRSAEncryptResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field RSAEncryptResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull cipherText;
@end

/**
 * RSAKeyResponse --
 */
@interface LibraryRSAKeyResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field RSAKeyResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull prvKey;
@end

/**
 * RSAPrvKeyHashResponse --
 */
@interface LibraryRSAPrvKeyHashResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field RSAPrvKeyHashResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull hash;
@end

/**
 * RSAPubKeyResponse --
 */
@interface LibraryRSAPubKeyResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field RSAPubKeyResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull pubKey;
@end

/**
 * RSASignResponse --
 */
@interface LibraryRSASignResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field RSASignResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull signature;
@end

/**
 * Status --
 */
@interface LibraryStatus : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long code;
@property (nonatomic) NSString* _Nonnull message;
@end

/**
 * TokenResponse --
 */
@interface LibraryTokenResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field TokenResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull token;
@end

/**
 * VCodeRequest --
 */
@interface LibraryVcodeResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field VcodeResponse.Status with unsupported type: threshwallet/src/library.Status

@end

/**
 * WalletAddressesResponse --
 */
@interface LibraryWalletAddressesResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletAddressesResponse.Status with unsupported type: threshwallet/src/library.Status

// skipped field WalletAddressesResponse.Addresses with unsupported type: []threshwallet/src/proto.WalletAddressesResponse

@end

/**
 * WalletBackupResponse --
 */
@interface LibraryWalletBackupResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletBackupResponse.Status with unsupported type: threshwallet/src/library.Status

@end

/**
 * WalletBackupVerifyResponse --
 */
@interface LibraryWalletBackupVerifyResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletBackupVerifyResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) BOOL verifyPassed;
@property (nonatomic) int64_t verifyTimestamp;
@end

/**
 * WalletBalanceResponse --
 */
@interface LibraryWalletBalanceResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletBalanceResponse.Status with unsupported type: threshwallet/src/library.Status

// skipped field WalletBalanceResponse.CoinValue with unsupported type: uint64

@end

/**
 * WalletCheckResponse --
 */
@interface LibraryWalletCheckResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletCheckResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) BOOL walletExists;
@property (nonatomic) BOOL backupExists;
@property (nonatomic) BOOL forceRecover;
@property (nonatomic) int64_t backupTimestamp;
@property (nonatomic) NSString* _Nonnull backupCloudService;
@end

/**
 * WalletCreateResponse --
 */
@interface LibraryWalletCreateResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletCreateResponse.Status with unsupported type: threshwallet/src/library.Status

@end

/**
 * WalletNewAddressResponse --
 */
@interface LibraryWalletNewAddressResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletNewAddressResponse.Status with unsupported type: threshwallet/src/library.Status

// skipped field WalletNewAddressResponse.Pos with unsupported type: uint32

@property (nonatomic) NSString* _Nonnull address;
@end

/**
 * WalletPortfolioResponse --
 */
@interface LibraryWalletPortfolioResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletPortfolioResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull coinSymbol;
@property (nonatomic) NSString* _Nonnull fiatSymbol;
@property (nonatomic) double currentPrice;
@end

/**
 * WalletRestoreResponse --
 */
@interface LibraryWalletRestoreResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletRestoreResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) int64_t time;
@property (nonatomic) NSString* _Nonnull masterPrvKey;
@end

/**
 * WalletPrepareSendResponse --
 */
@interface LibraryWalletSendFeesResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletSendFeesResponse.Status with unsupported type: threshwallet/src/library.Status

// skipped field WalletSendFeesResponse.Fees with unsupported type: uint64

@property (nonatomic) NSString* _Nonnull feeMode;
// skipped field WalletSendFeesResponse.TotalValue with unsupported type: uint64

// skipped field WalletSendFeesResponse.SendableValue with unsupported type: uint64

@end

/**
 * WalletSendResponse --
 */
@interface LibraryWalletSendResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletSendResponse.Status with unsupported type: threshwallet/src/library.Status

@property (nonatomic) NSString* _Nonnull txID;
@end

/**
 * WalletTxsResponse --
 */
@interface LibraryWalletTxsResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletTxsResponse.Status with unsupported type: threshwallet/src/library.Status

// skipped field WalletTxsResponse.Txs with unsupported type: []threshwallet/src/proto.WalletTxsResponse

@end

FOUNDATION_EXPORT NSString* _Nonnull const LibraryMainNet;
FOUNDATION_EXPORT NSString* _Nonnull const LibraryTestNet;

/**
 * APIGetToken -- get token api.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIGetToken(NSString* _Nullable url, NSString* _Nullable uid, NSString* _Nullable vcode);

/**
 * APIGetVCode -- the vcode api.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIGetVCode(NSString* _Nullable url, NSString* _Nullable uid);

/**
 * APIHello -- test for IOS/Android static.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIHello(NSString* _Nullable msg);

/**
 * APIWalletAddresses -- get the address list.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletAddresses(NSString* _Nullable url, NSString* _Nullable token, long offset, long limit);

/**
 * APIWalletBackup --
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletBackup(NSString* _Nullable url, NSString* _Nullable token, NSString* _Nullable deviceID, NSString* _Nullable cloudService, NSString* _Nullable rsaPrvKey, NSString* _Nullable masterPrvKey);

/**
 * APIWalletBackupVerify -- used to verify the client backup is valid or not.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletBackupVerify(NSString* _Nullable url, NSString* _Nullable token, NSString* _Nullable rsaPrvKey);

/**
 * APIWalletBalance -- Wallet balance api.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletBalance(NSString* _Nullable url, NSString* _Nullable token);

/**
 * APIWalletCheck -- check the user/backup exists.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletCheck(NSString* _Nullable url, NSString* _Nullable token);

/**
 * APIWalletCreate -- create the wallet.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletCreate(NSString* _Nullable url, NSString* _Nullable token, NSString* _Nullable masterPrvKey);

/**
 * APIWalletNewAddress -- new address api.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletNewAddress(NSString* _Nullable url, NSString* _Nullable token);

/**
 * APIWalletPortfolio -- portfolio api.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletPortfolio(NSString* _Nullable url, NSString* _Nullable token);

/**
 * APIWalletRestore -- used to restore the backup from the server.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletRestore(NSString* _Nullable url, NSString* _Nullable token, NSString* _Nullable rsaPrvKey);

// skipped function APIWalletSend with unsupported parameter or return types


// skipped function APIWalletSendFees with unsupported parameter or return types


/**
 * APIWalletTxs -- get the txs.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryAPIWalletTxs(NSString* _Nullable url, NSString* _Nullable token, long offset, long limit);

/**
 * GetRSAPubKey -- used to get the pem format of the pubkey.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryGetRSAPubKey(NSString* _Nullable rsaPrvKey);

/**
 * NewMasterKey -- used to generate a new random master key.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryNewMasterPrvKey(NSString* _Nullable chainnet);

/**
 * NewRSAPrvKey -- generates a new key pair.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryNewRSAPrvKey(void);

/**
 * RSADecrypt -- decrypt the cipher to the plain with prvkey.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryRSADecrypt(NSString* _Nullable ciphertext, NSString* _Nullable prvkey);

/**
 * RSAEncrypt -- encrypt the msg with prvkey.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryRSAEncrypt(NSString* _Nullable msg, NSString* _Nullable prvkey);

/**
 * RSAPrvKeyHash -- used to get the sha256 of the pubkey with pem.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryRSAPrvKeyHash(NSString* _Nullable prvkey);

/**
 * RSASign -- sign the digest with prvkey.
 */
FOUNDATION_EXPORT NSString* _Nonnull LibraryRSASign(NSString* _Nullable digestHex, NSString* _Nullable prvkey);

#endif
